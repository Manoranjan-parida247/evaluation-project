{"ast":null,"code":"export const validateLogin = ({\n  email,\n  password\n}) => {\n  const trimmedEmail = email.trim();\n  const trimmedPassword = password.trim();\n  let loginFormErrors = {};\n\n  // Email\n  if (!trimmedEmail) {\n    loginFormErrors.email = \"Email is required\";\n  } else if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(trimmedEmail)) {\n    loginFormErrors.email = \"Please enter a valid email address\";\n  }\n\n  // Password\n  if (!trimmedPassword) {\n    loginFormErrors.password = 'Password is required';\n  } else if (trimmedPassword.length < 8) {\n    loginFormErrors.password = 'Password must be at least 8 characters long';\n  } else if (!/[A-Z]/.test(trimmedPassword)) {\n    loginFormErrors.password = 'Password must contain at least one uppercase letter';\n  } else if (!/[a-z]/.test(trimmedPassword)) {\n    loginFormErrors.password = 'Password must contain at least one lowercase letter';\n  } else if (!/[0-9]/.test(trimmedPassword)) {\n    loginFormErrors.password = 'Password must contain at least one number';\n  } else if (!/[!@#$%^&*(),.?\":{}|<>]/.test(trimmedPassword)) {\n    loginFormErrors.password = 'Password must include at least one special character';\n  }\n  return loginFormErrors;\n};","map":{"version":3,"names":["validateLogin","email","password","trimmedEmail","trim","trimmedPassword","loginFormErrors","test","length"],"sources":["/home/manoranjan-parida/Desktop/csm/src/components/login/validateLogin.js"],"sourcesContent":["export const validateLogin = ({email, password})=>{\n    const trimmedEmail = email.trim();\n    const trimmedPassword = password.trim();\n\n    let loginFormErrors = {};\n\n    // Email\n    if (!trimmedEmail) {\n        loginFormErrors.email = \"Email is required\";\n    } else if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(trimmedEmail)) {\n        loginFormErrors.email = \"Please enter a valid email address\";\n    }\n\n    // Password\n    if (!trimmedPassword) {\n        loginFormErrors.password = 'Password is required';\n    } else if (trimmedPassword.length < 8) {\n        loginFormErrors.password = 'Password must be at least 8 characters long';\n    } else if (!/[A-Z]/.test(trimmedPassword)) {\n        loginFormErrors.password = 'Password must contain at least one uppercase letter';\n    } else if (!/[a-z]/.test(trimmedPassword)) {\n        loginFormErrors.password = 'Password must contain at least one lowercase letter';\n    } else if (!/[0-9]/.test(trimmedPassword)) {\n        loginFormErrors.password = 'Password must contain at least one number';\n    } else if (!/[!@#$%^&*(),.?\":{}|<>]/.test(trimmedPassword)) {\n        loginFormErrors.password = 'Password must include at least one special character';\n    }\n\n    return loginFormErrors;\n\n}"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAQ,CAAC,KAAG;EAC9C,MAAMC,YAAY,GAAGF,KAAK,CAACG,IAAI,CAAC,CAAC;EACjC,MAAMC,eAAe,GAAGH,QAAQ,CAACE,IAAI,CAAC,CAAC;EAEvC,IAAIE,eAAe,GAAG,CAAC,CAAC;;EAExB;EACA,IAAI,CAACH,YAAY,EAAE;IACfG,eAAe,CAACL,KAAK,GAAG,mBAAmB;EAC/C,CAAC,MAAM,IAAI,CAAC,kDAAkD,CAACM,IAAI,CAACJ,YAAY,CAAC,EAAE;IAC/EG,eAAe,CAACL,KAAK,GAAG,oCAAoC;EAChE;;EAEA;EACA,IAAI,CAACI,eAAe,EAAE;IAClBC,eAAe,CAACJ,QAAQ,GAAG,sBAAsB;EACrD,CAAC,MAAM,IAAIG,eAAe,CAACG,MAAM,GAAG,CAAC,EAAE;IACnCF,eAAe,CAACJ,QAAQ,GAAG,6CAA6C;EAC5E,CAAC,MAAM,IAAI,CAAC,OAAO,CAACK,IAAI,CAACF,eAAe,CAAC,EAAE;IACvCC,eAAe,CAACJ,QAAQ,GAAG,qDAAqD;EACpF,CAAC,MAAM,IAAI,CAAC,OAAO,CAACK,IAAI,CAACF,eAAe,CAAC,EAAE;IACvCC,eAAe,CAACJ,QAAQ,GAAG,qDAAqD;EACpF,CAAC,MAAM,IAAI,CAAC,OAAO,CAACK,IAAI,CAACF,eAAe,CAAC,EAAE;IACvCC,eAAe,CAACJ,QAAQ,GAAG,2CAA2C;EAC1E,CAAC,MAAM,IAAI,CAAC,wBAAwB,CAACK,IAAI,CAACF,eAAe,CAAC,EAAE;IACxDC,eAAe,CAACJ,QAAQ,GAAG,sDAAsD;EACrF;EAEA,OAAOI,eAAe;AAE1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}